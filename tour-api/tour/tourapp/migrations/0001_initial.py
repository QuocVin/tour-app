# Generated by Django 3.2.5 on 2021-09-27 08:19

import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=15, null=True, unique=True)),
                ('avatar', models.ImageField(null=True, upload_to='static/upload/%Y/%m')),
                ('address', models.CharField(max_length=150)),
                ('role', models.CharField(choices=[('NHAN VIEN', 'nhan vien'), ('NGUOI DUNG', 'nguoi dung')], default='', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'address',
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=True)),
                ('comment', models.TextField(default='', max_length=100)),
            ],
            options={
                'db_table': 'rate',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'type',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tourapp.user')),
            ],
            options={
                'db_table': 'employee',
            },
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateStart', models.DateField(auto_now_add=True)),
                ('dateEnd', models.DateField()),
                ('descriptions', ckeditor.fields.RichTextField()),
                ('title', models.CharField(max_length=80)),
                ('price1', models.IntegerField(default=50)),
                ('price2', models.IntegerField(default=30)),
                ('static', models.CharField(choices=[('DA DONG', 'Tour đã đóng đăng ký'), ('DANG MO', 'Tour còn mở đăng ký')], default='DANG MO', max_length=10)),
                ('address', models.ManyToManyField(to='tourapp.Address')),
                ('type', models.ManyToManyField(to='tourapp.Type')),
            ],
            options={
                'db_table': 'tour',
            },
        ),
        migrations.CreateModel(
            name='NewsTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('descriptions', ckeditor.fields.RichTextField()),
                ('dateCreate', models.DateField(auto_now_add=True)),
                ('dateEnd', models.DateField()),
                ('static', models.CharField(choices=[('DA DONG', 'Bài viết đã hết hạn'), ('DANG MO', 'Bài viết vẫn còn đăng')], default='DANG MO', max_length=10)),
                ('rate', models.ManyToManyField(to='tourapp.Rate')),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourapp.tour')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourapp.employee')),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='tourapp.user')),
                ('rate', models.ManyToManyField(to='tourapp.Rate')),
            ],
            options={
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('people1', models.IntegerField(default=1)),
                ('people2', models.IntegerField(default=0)),
                ('totlePrice', models.IntegerField(default=0)),
                ('tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourapp.tour')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourapp.customer')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tourapp.employee')),
            ],
            options={
                'db_table': 'booking',
            },
        ),
    ]
